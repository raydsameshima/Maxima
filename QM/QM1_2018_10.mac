/*
QM1_2018_10.mac
2018 QM 1. Homework 10
Ray D. Sameshima
*/
kill(all)$
load("SHO.mac")$

"Question 1 c) Define a state "$
declare(N, [scalar, real]);
s: N*(3*ket(0) + sqrt(3)*ket(1) + 2*ket(3));
sd: conjugate(s);
"The normalization condition should be:"$
sol: solve( sd. s = 1, N);
"Therefore, we have"$
s: at(s, sol[2]);
sd: at(sd, sol[2]);
expand(sd . s);
[expand(bra(0) . s)^2, expand(bra(1) . s)^2, expand(bra(3) . s)^2];
sum(%[i],i,1,length(%));

"d) x and p in energy eigen space."$ 
declare([m,w,h],[scalar, real]);
sol: factor(solve([L=1/sqrt(2*m*w*h)*(p-%i*m*w*x), R=1/sqrt(2*m*w*h)*(p+%i*m*w*x)],[x,p]));
x: ev(x, sol);
p: ev(p, sol);
"So x and p are essentially (R-L) and (R+L) "$

"To see the non-zero elements of x, and x^^2: "$
factor( expand( bra(i) . x . ket(j)));
factor( expand( bra(i) . x^^2 . ket(j)));

"The matrix representations are"$
mat_rep(x,4);
mat_rep(x^^2,4);

"Using indices"$
bra(i) . (R-L) . ket(j), expand;
bra(i) . (R-L)^^2 . ket(j), expand;

"Since x is essentially R-L,"$
mat_rep((R-L), 4);
mat_rep((R-L)^^2, 4);

"e) <x>_s and <x^2>_s in t=0:"$
x;
x^^2;
expand(sd . x . s);
expand(sd . expand(x^^2 . s));

"Let us consider time evolution. "$
declare(U, nonscalar);
declare([t], [scalar, real]);

tellsimp( U(t) . ket(i), exp(-%i*t*w*(i+1/2)) * ket(i));
tellsimp( bra(i) . U(t), conjugate( U(t) . ket(i)));

"f) The state in t and the expectation value for x are"$
s(t) := expand(U(t) . s);
exp_x: expand(demoivre(expand(conjugate(s(t)) . x . s(t))));

exp_x2: expand(demoivre(expand( conjugate(s(t)) . expand(x^^2 . s(t)))));
trigsimp(exp_x2 - exp_x^2);

"Question 2, solutions of wave equation."$ 
kill(h,m,k,x,rho);
declare([h,m,k,x,rho],[scalar, real]);
declare([A,B,C,D],[scalar, complex]);
phi[1](x) := A*exp(%i*k*x) + B*exp(-%i*k*x);
phi[2](x) := C*exp(rho*x) + D*exp(-rho*x);

current1: -%i*h/m * conjugate(phi[1](x)) * diff(phi[1](x),x,1);
trigsimp( realpart (expand(demoivre(expand(current1)))));
"So there is no interference, and they are essentially j_in - j_out"$

current2: -%i*h/m * conjugate(phi[2](x)) * diff(phi[2](x),x,1);
c2: radcan(realpart(expand(current2)));
"Only interference terms, and this combination is essentially "$
imagpart(conjugate(D)*C);

/*
sol: solve([phi[1](0) = phi[2](0), at(diff(phi[1](x),x,1),x=0) = at(diff(phi[2](x),x,1),x=0)]
          ,[C,D]);
define(phi[2](x), at(phi[2](x), sol[1]));
trigsimp( realpart (expand(demoivre(expand( -%i*h/m * conjugate(phi[2](x)) * diff(phi[2](x),x))))));
*/

"Question 3 a) and b) Dirac-delta potential well."$
assume(h>0,m>0, E<0, k>0, a>0);
"Let me define a wave function, where k:sqrt(2*m*(-E)/h^2)"$
phi[1](x) := A*exp( k*x); /* 0<x */
phi[2](x) := A*exp(-k*x); /* 0<x */

"Let me set an integrated Schroedinger eq, with Dirac delta part on the right:"$
s_eq: at( diff(phi[2](x),x,1) - diff(phi[1](x),x,1), x=0) = 2*m/h^2 * (-a) * phi[1](0);
k_sol:solve(s_eq, k);
"Substituting the definition of k, we can solve this equation for E to get the bound state energy:"$
solve( ev(k_sol, k: sqrt(2*m*(-E)/h^2)), E);

"c), d), e) and f)."$
"Let me consider symmetric solution for 0<=x: "$
psi[1](x) := A*(exp(k*x) + exp(-k*x));
psi[2](x) := B*A*exp(-k*x);
c_eq: psi[1](a) = psi[2](a);
define(psi[2](x),at(psi[2](x), solve( c_eq, B)));
q_eq: -h^2/(2*m) * at( diff(psi[2](x) - psi[1](x),x,1), x=a) = -(-alpha)*psi[1](a);
sol: solve(q_eq, k);
answer1: 2*a*factor(expand(sol / (exp(-2*k*a)+1)));
"So we have x*exp(x)/(exp(x)+1) as a function which characterizes the existance of bound state."$

"Next, the odd solution:"$
psi[3](x) := C*(exp(k*x) - exp(-k*x));
psi[4](x) := D*C*exp(-k*x);
c_eq2: psi[3](a) = psi[4](a);
define(psi[4](x),at(psi[4](x), solve( c_eq2, D)));
q_eq2: -h^2/(2*m) * at( diff(psi[4](x) - psi[3](x),x,1), x=a) = -(-alpha)*psi[3](a);
sol2: solve(q_eq2, k);
answer2: radcan( 2*a*sol2/(1-exp(-2*k*a)));
"So we have x*exp(x)/(exp(x)-1) as a function which characterizes the existance of bound state."$

plot2d(
  [x*exp(x)/(exp(x)+1),x*exp(x)/(exp(x)-1)],
  [x,0,5],
  [y,0,4],
  [style,[lines,1]
        ,[lines,10]], 
  [gnuplot_preamble, "set key bottom right"]
);
"Therefore, if the right hand sides 2*m*alpha/h^2 of positive number is smaller than 1, 
 then there is no odd baound state."$
rhs(answer1[1]);
