/*
Geometry: Planar Curves

http://maxima.sourceforge.net/docs/tutorial/en/gaertner-tutorial-revision/Pages/FnDef0001.htm

*/
kill(all);
"Let us define a parametric curve:"$
alpha(t) := [sin(t), cos(t)];
"That is, alpha is the unit circle."$
plot2d( [parametric,alpha(t)[1],alpha(t)[2]]
      , [t,0,2*%pi]
      , [gnuplot_preamble,"set term x11 0"]
      );
"The derivation is,"$
define(d(t), diff(alpha(t),t));
"Define a function, so called the complex structure:"$
J(a) := [-a[2], a[1]];
J(alpha(y));
"Geometrically, this is just pi/2-rotation."$
"Therefore, the scalar product of alpha(z) and J(alpha(z)) must be zero:"$
alpha(z) . J(alpha(z));
"Define the curvature of a plane curve:"$
kappa(f, t) :=
  diff(f(t),t,2) . J(diff(f(t),t)) / ((diff(f(t),t) . diff(f(t),t))^(3/2));
k: kappa(alpha,t);
trigsimp(k);
"This implies that the unit circle has constant(-1) curvature."$
"Let us examine another example."$
eight(t) := [sin(t), sin(t) * cos(t)];
plot2d( [parametric, eight(t)[1], eight(t)[2]]
      , [t, -%pi, %pi]
      , [gnuplot_preamble, "set term x11 1"] 
);
"Literally this is eight."$
kappa(eight, z);
trigsimp(%);
plot2d( kappa(eight, z)
      , [z,-%pi, %pi]
      , [gnuplot_preamble, "set term x11 2"]
      );
"Define cross product, with a trick:"$
cross(v1, v2) :=
  determinant(matrix([[1,0,0]
                     ,[0,1,0]
                     ,[0,0,1]]
                    , v1
                    , v2
                    ));
"OK, OK, step by step."$
"rotateLeft: pick the leftmost element and insert to right."$
rotateLeft(v1) :=
  append(rest(v1,1), cons(first(v1),[]));
cross1(u,v) :=
  rotateLeft( u * rotateLeft(v) - v * rotateLeft(u));
cross([a,b,c],[x,y,z]);
cross1([a,b,c],[x,y,z]);
"Next, tangent and binormal."$
/*
tangent(f,x) :=
  diff(f(x),x) / radcan(trigsimp(((diff(f(x),x) . diff(f(x),x))^(1/2))));
*/
tangent(f,x) :=
block( [df : diff(f(x),x)] /* we do not need compute 3 times! */
     , df / radcan(trigsimp((df . df)^(1/2)))
     );
/*
binormal(f,x) :=
  trigsimp(cross( diff(f(x), x)
                , diff(f(x), x, 2)
                )
          ) /
    radcan(
      trigsimp(
        ( cross(diff(f(x), x), diff(f(x), x, 2))
        . cross(diff(f(x), x), diff(f(x), x, 2))
        ) ^(1/2)
      )
    );
*/
binormal(f,x) :=
block( [ c : cross(diff(f(x),x), diff(f(x),x,2)) ]
     , trigsimp(c) / radcan(trigsimp((c . c)^(1/2)))
     );
normal(f, x) :=
  radcan(trigsimp(cross(binormal(f,x), tangent(f,x))));
tube(f,r,t,phi) :=
  f(t) + r*(cos(phi) * normal(f,t) + sin(phi) * binormal(f,t));
helix(x) := [5*cos(x), 5*sin(x), 3*x];
tangent(helix,t);
binormal(helix,t);
/*
normal(helix,t);
w(x) := [2*t^2-t, t^2, 2*t^2+4*t];
plot3d( tube(helix,1,t,r)
      , [t,-2*%pi,2*%pi]
      , [r,0,2*%pi]
      , [grid,50,10]
      , [gnuplot_preamble,"set term x11 3"]
      );
*/
